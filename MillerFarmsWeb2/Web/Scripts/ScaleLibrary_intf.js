//----------------------------------------------------------------------------//
// This unit was automatically generated by the RemObjects SDK after reading  //
// the RODL file associated with this project .                               //
//                                                                            //
// Do not modify this unit manually, or your changes will be lost when this   //
// unit is regenerated the next time you compile the project.                 //
//----------------------------------------------------------------------------//


/* This codegen depends on RemObjects.js
* Usage:
* var Channel = new RemObjects.SDK.HTTPClientChannel("http://localhost:8099/JSON");
* var Message = new RemObjects.SDK.JSONMessage();
* var Service = new NewService(Channel, Message);
* Service.Sum(1, 2,
*             function(result) {
*                 alert(result);
*             },
*             function(msg) {alert(msg.getErrorMessage())}
* );
*
*/



// Array: ScaleNames
function ScaleNames() {
  RemObjects.SDK.ROArrayType.call(this);
  this.elementType = "AnsiString";
};
ScaleNames.prototype = new RemObjects.SDK.ROArrayType();
ScaleNames.prototype.constructor = ScaleNames;
RemObjects.SDK.RTTI["ScaleNames"] = ScaleNames;



// Service: ScaleService
function ScaleService(__channel, __message, __service_name) {
  RemObjects.SDK.ROService.call(this, __channel, __message, __service_name);
  this.fServiceName = this.fServiceName || __service_name || "ScaleService";
};


ScaleService.prototype.Ping = function(
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "Ping");
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
	        __success(
		__result
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.GetGross = function(
	ScaleName,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "GetGross");
        msg.write("ScaleName", "AnsiString", ScaleName);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Double");
	        __success(
		__result
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.GetUnits = function(
	ScaleName,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "GetUnits");
        msg.write("ScaleName", "AnsiString", ScaleName);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "AnsiString");
	        __success(
		__result
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.GetTare = function(
	ScaleName,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "GetTare");
        msg.write("ScaleName", "AnsiString", ScaleName);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Double");
	        __success(
		__result
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.SetTare = function(
	ScaleName,
	Value,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "SetTare");
        msg.write("ScaleName", "AnsiString", ScaleName);
        msg.write("Value", "Double", Value);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
	        __success(
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.AutoTare = function(
	ScaleName,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "AutoTare");
        msg.write("ScaleName", "AnsiString", ScaleName);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
	        __success(
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.ZeroScale = function(
	ScaleName,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "ZeroScale");
        msg.write("ScaleName", "AnsiString", ScaleName);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
	        __success(
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.Reboot = function(
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "Reboot");
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
	        __success(
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.ReadInput = function(
	Id,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "ReadInput");
        msg.write("Id", "AnsiString", Id);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Boolean");
	        __success(
		__result
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.SetOutput = function(
	Id,
	State,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "SetOutput");
        msg.write("Id", "AnsiString", Id);
        msg.write("State", "Boolean", State);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
	        __success(
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.GetScaleNames = function(
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "GetScaleNames");
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "ScaleNames");
	        __success(
		__result
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.GetNet = function(
	ScaleName,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "GetNet");
        msg.write("ScaleName", "AnsiString", ScaleName);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "Double");
	        __success(
		__result
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.StartVNC = function(
	Password,
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "StartVNC");
        msg.write("Password", "AnsiString", Password);
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "AnsiString");
	        __success(
		__result
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};

ScaleService.prototype.StopVNC = function(
	__success, __error) {
    try {
        var msg = this.fMessage.clone();
        msg.initialize(this.fServiceName, "StopVNC");
        msg.finalize();
        this.fChannel.dispatch(msg, function (__message) {
		var __result = __message.read("Result", "AnsiString");
	        __success(
		__result
		);
        }, __error);

    } catch (e) {
        __error(msg, e);
    };
};



